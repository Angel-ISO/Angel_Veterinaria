// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Data.Migrations
{
    [DbContext(typeof(E1AppContext))]
    partial class E1AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.Cita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Cita")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_cita");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("hora");

                    b.Property<int>("IdMascota")
                        .HasColumnType("int");

                    b.Property<int>("IdVeterinario")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Motivo");

                    b.HasKey("Id");

                    b.HasIndex("IdMascota");

                    b.HasIndex("IdVeterinario");

                    b.ToTable("Cita", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fecha = new DateTime(2023, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hora = "3:00 PM",
                            IdMascota = 2,
                            IdVeterinario = 1,
                            Motivo = "resfriado"
                        },
                        new
                        {
                            Id = 2,
                            Fecha = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hora = "2:00 PM",
                            IdMascota = 1,
                            IdVeterinario = 2,
                            Motivo = "paro respiratorio"
                        },
                        new
                        {
                            Id = 3,
                            Fecha = new DateTime(2022, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hora = "5:00 AM",
                            IdMascota = 3,
                            IdVeterinario = 3,
                            Motivo = "alimento no comestible"
                        },
                        new
                        {
                            Id = 4,
                            Fecha = new DateTime(2023, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Hora = "10:00 AM",
                            IdMascota = 2,
                            IdVeterinario = 3,
                            Motivo = "revicion"
                        });
                });

            modelBuilder.Entity("Domain.Entities.DetalleMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_DetalleMovimiento")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("Cantidad");

                    b.Property<int>("IdMedicamento")
                        .HasColumnType("int");

                    b.Property<int>("IdMovimientoMed")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoMovimiento")
                        .HasColumnType("int");

                    b.Property<int>("Precio")
                        .HasColumnType("int")
                        .HasColumnName("precio");

                    b.HasKey("Id");

                    b.HasIndex("IdMedicamento");

                    b.HasIndex("IdMovimientoMed");

                    b.HasIndex("IdTipoMovimiento");

                    b.ToTable("DetalleMovimiento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 5,
                            IdMedicamento = 1,
                            IdMovimientoMed = 1,
                            IdTipoMovimiento = 1,
                            Precio = 2000
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 7,
                            IdMedicamento = 1,
                            IdMovimientoMed = 2,
                            IdTipoMovimiento = 1,
                            Precio = 5000
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 9,
                            IdMedicamento = 2,
                            IdMovimientoMed = 3,
                            IdTipoMovimiento = 3,
                            Precio = 500
                        });
                });

            modelBuilder.Entity("Domain.Entities.Especie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Especie")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Especie", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "reptil"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "ave"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "mamifero"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Laboratorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Laboratorio")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dirrecion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("dirrecion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("telefono");

                    b.HasKey("Id");

                    b.ToTable("Laboratorio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dirrecion = "bogota Dc Norte",
                            Nombre = "MQ industries",
                            Telefono = "+1-12332-1232"
                        },
                        new
                        {
                            Id = 2,
                            Dirrecion = "medellin Dc Norte",
                            Nombre = "genfar",
                            Telefono = "+51-12342-232"
                        },
                        new
                        {
                            Id = 3,
                            Dirrecion = "Venezuela",
                            Nombre = "real tapitas farmacos",
                            Telefono = "+35-1222-33424"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Mascota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Mascota")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fechaNacimiento");

                    b.Property<int>("IdEspecie")
                        .HasColumnType("int");

                    b.Property<int>("IdPropietario")
                        .HasColumnType("int");

                    b.Property<int>("IdRaza")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("IdEspecie");

                    b.HasIndex("IdPropietario");

                    b.HasIndex("IdRaza");

                    b.ToTable("Mascota", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaNacimiento = new DateTime(2020, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEspecie = 1,
                            IdPropietario = 1,
                            IdRaza = 1,
                            Nombre = "muñeca"
                        },
                        new
                        {
                            Id = 2,
                            FechaNacimiento = new DateTime(2019, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEspecie = 1,
                            IdPropietario = 2,
                            IdRaza = 2,
                            Nombre = "winchi"
                        },
                        new
                        {
                            Id = 3,
                            FechaNacimiento = new DateTime(2015, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdEspecie = 1,
                            IdPropietario = 3,
                            IdRaza = 2,
                            Nombre = "mataGigantes"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Medicamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Medicamento")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int")
                        .HasColumnName("cantidadDisponible");

                    b.Property<int>("IdLaboratio")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.Property<int>("Precio")
                        .HasColumnType("int")
                        .HasColumnName("precio");

                    b.HasKey("Id");

                    b.HasIndex("IdLaboratio");

                    b.ToTable("Medicamento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CantidadDisponible = 3,
                            IdLaboratio = 1,
                            Nombre = "paracetamol",
                            Precio = 1000
                        },
                        new
                        {
                            Id = 2,
                            CantidadDisponible = 3,
                            IdLaboratio = 1,
                            Nombre = "acetaminofen",
                            Precio = 5000
                        },
                        new
                        {
                            Id = 3,
                            CantidadDisponible = 3,
                            IdLaboratio = 2,
                            Nombre = "champiojo",
                            Precio = 110000
                        },
                        new
                        {
                            Id = 4,
                            CantidadDisponible = 10,
                            IdLaboratio = 2,
                            Nombre = "cianuro",
                            Precio = 1105000
                        });
                });

            modelBuilder.Entity("Domain.Entities.MedicamentoProveedor", b =>
                {
                    b.Property<int>("IdMedicamento")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.HasKey("IdMedicamento", "IdProveedor");

                    b.HasIndex("IdProveedor");

                    b.ToTable("MedicamentoProveedores");
                });

            modelBuilder.Entity("Domain.Entities.MovimientoMedicamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_MovimientoMed")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha");

                    b.Property<int>("IdMedicamento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMedicamento");

                    b.ToTable("MovimientoMedicamento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 2,
                            Fecha = new DateTime(2022, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdMedicamento = 1
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 4,
                            Fecha = new DateTime(2022, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdMedicamento = 2
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 5,
                            Fecha = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdMedicamento = 3
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 6,
                            Fecha = new DateTime(2011, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdMedicamento = 3
                        });
                });

            modelBuilder.Entity("Domain.Entities.Propietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Propietario")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("telefono");

                    b.HasKey("Id");

                    b.ToTable("Propietario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "orlando@gmail.com",
                            Nombre = "orlando",
                            Telefono = "+65-3456-6543"
                        },
                        new
                        {
                            Id = 2,
                            Email = "luisa@gmail.com",
                            Nombre = "luisa",
                            Telefono = "+45-5684-4797"
                        },
                        new
                        {
                            Id = 3,
                            Email = "sofia@gmail.com",
                            Nombre = "sofia",
                            Telefono = "+25-2323-3754"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Proveedor")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dirrecion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("direccion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("telefono");

                    b.HasKey("Id");

                    b.ToTable("Proveedor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dirrecion = "el bronx/ avenida municipal",
                            Nombre = "arnulfoxD",
                            Telefono = "+1-1233-3457"
                        },
                        new
                        {
                            Id = 2,
                            Dirrecion = "carrera 15 / bucaramanga",
                            Nombre = "stward",
                            Telefono = "+1-1233-3457"
                        },
                        new
                        {
                            Id = 3,
                            Dirrecion = "new york/ aadp",
                            Nombre = "ramiro",
                            Telefono = "+1-1233-3457"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Raza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Raza")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEspecie")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("IdEspecie");

                    b.ToTable("Raza", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdEspecie = 3,
                            Name = "roge wailler"
                        },
                        new
                        {
                            Id = 2,
                            IdEspecie = 3,
                            Name = "cabeza leon"
                        },
                        new
                        {
                            Id = 3,
                            IdEspecie = 3,
                            Name = "puddle"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Rol")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description_Rol")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("descRol");

                    b.Property<string>("Name_Rol")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("NameRol");

                    b.HasKey("Id");

                    b.ToTable("Rol", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description_Rol = "Rol de administrador",
                            Name_Rol = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description_Rol = "Gestor de administracion",
                            Name_Rol = "Gerente"
                        },
                        new
                        {
                            Id = 3,
                            Description_Rol = "Asalariado de la empresa",
                            Name_Rol = "veterinario"
                        },
                        new
                        {
                            Id = 4,
                            Description_Rol = "dueño de un paciente",
                            Name_Rol = "propietario"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TipoMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_TipoMov")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("description");

                    b.HasKey("Id");

                    b.ToTable("TipoMovimiento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "importacion"
                        },
                        new
                        {
                            Id = 2,
                            Description = "devolucion"
                        },
                        new
                        {
                            Id = 3,
                            Description = "envio aereo"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TratamientosMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Tratamiento")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dosis")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Dosis");

                    b.Property<DateTime>("FechaAdministracion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fechaAdministracion");

                    b.Property<int>("IdCita")
                        .HasColumnType("int");

                    b.Property<int>("IdMedicamento")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("obsevacion");

                    b.HasKey("Id");

                    b.HasIndex("IdCita");

                    b.HasIndex("IdMedicamento");

                    b.ToTable("TratamientosMedico", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dosis = "inyeccion",
                            FechaAdministracion = new DateTime(2021, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCita = 1,
                            IdMedicamento = 1,
                            Observacion = "signos vitales buenos"
                        },
                        new
                        {
                            Id = 2,
                            Dosis = "cirugia",
                            FechaAdministracion = new DateTime(2023, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCita = 2,
                            IdMedicamento = 1,
                            Observacion = "operacion perfecta"
                        },
                        new
                        {
                            Id = 3,
                            Dosis = "baypass gastrico",
                            FechaAdministracion = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCita = 1,
                            IdMedicamento = 1,
                            Observacion = "perdida del paciente"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_User")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<string>("Name_User")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("NameUser");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Password");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "angel@gmail.com",
                            Name_User = "Angel",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 2,
                            Email = "sofia@gmail.com",
                            Name_User = "sofia",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 3,
                            Email = "lucia@gmail.com",
                            Name_User = "lucia",
                            Password = "1234"
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserRol", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RolId");

                    b.HasIndex("RolId");

                    b.ToTable("UsersRols");
                });

            modelBuilder.Entity("Domain.Entities.Veterinario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Veterinario")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("correo");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("especialdad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("telefono");

                    b.HasKey("Id");

                    b.ToTable("Veterinario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Correo = "juancho@martinezgmail.com",
                            Especialidad = "cirujanobascular",
                            Nombre = "juancho",
                            Telefono = "+32-2345-4542"
                        },
                        new
                        {
                            Id = 2,
                            Correo = "miranda@gmail.com",
                            Especialidad = "enfermera",
                            Nombre = "miranda",
                            Telefono = "+32-5432-4325"
                        },
                        new
                        {
                            Id = 3,
                            Correo = "ana@gmail.com",
                            Especialidad = "inyectologa",
                            Nombre = "ana",
                            Telefono = "+32-7654-9860"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cita", b =>
                {
                    b.HasOne("Domain.Entities.Mascota", "Mascota")
                        .WithMany("Citas")
                        .HasForeignKey("IdMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Veterinario", "Veterinario")
                        .WithMany("Citas")
                        .HasForeignKey("IdVeterinario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("Domain.Entities.DetalleMovimiento", b =>
                {
                    b.HasOne("Domain.Entities.Medicamento", "Medicamento")
                        .WithMany("DetalleMovimientos")
                        .HasForeignKey("IdMedicamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.MovimientoMedicamento", "MovimientoMedicamento")
                        .WithMany("DetalleMovimientos")
                        .HasForeignKey("IdMovimientoMed")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoMovimiento", "TipoMovimiento")
                        .WithMany("DetalleMovimientos")
                        .HasForeignKey("IdTipoMovimiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicamento");

                    b.Navigation("MovimientoMedicamento");

                    b.Navigation("TipoMovimiento");
                });

            modelBuilder.Entity("Domain.Entities.Mascota", b =>
                {
                    b.HasOne("Domain.Entities.Especie", "Especie")
                        .WithMany("Mascotas")
                        .HasForeignKey("IdEspecie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Propietario", "Propietario")
                        .WithMany("Mascotas")
                        .HasForeignKey("IdPropietario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Raza", "Raza")
                        .WithMany("Mascotas")
                        .HasForeignKey("IdRaza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");

                    b.Navigation("Propietario");

                    b.Navigation("Raza");
                });

            modelBuilder.Entity("Domain.Entities.Medicamento", b =>
                {
                    b.HasOne("Domain.Entities.Laboratorio", "Laboratorio")
                        .WithMany("Medicamentos")
                        .HasForeignKey("IdLaboratio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratorio");
                });

            modelBuilder.Entity("Domain.Entities.MedicamentoProveedor", b =>
                {
                    b.HasOne("Domain.Entities.Medicamento", "Medicamento")
                        .WithMany("MedicamentoProveedores")
                        .HasForeignKey("IdMedicamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Proveedor", "Proveedor")
                        .WithMany("MedicamentoProveedores")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicamento");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Domain.Entities.MovimientoMedicamento", b =>
                {
                    b.HasOne("Domain.Entities.Medicamento", "Medicamento")
                        .WithMany("MovimientoMedicamentos")
                        .HasForeignKey("IdMedicamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicamento");
                });

            modelBuilder.Entity("Domain.Entities.Raza", b =>
                {
                    b.HasOne("Domain.Entities.Especie", "Especie")
                        .WithMany("Razas")
                        .HasForeignKey("IdEspecie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");
                });

            modelBuilder.Entity("Domain.Entities.TratamientosMedico", b =>
                {
                    b.HasOne("Domain.Entities.Cita", "Cita")
                        .WithMany("TratamientosMedicos")
                        .HasForeignKey("IdCita")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Medicamento", "Medicamento")
                        .WithMany("TratamientosMedicos")
                        .HasForeignKey("IdMedicamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("Medicamento");
                });

            modelBuilder.Entity("Domain.Entities.UserRol", b =>
                {
                    b.HasOne("Domain.Entities.Rol", "Rol")
                        .WithMany("UserRols")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("UserRols")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Cita", b =>
                {
                    b.Navigation("TratamientosMedicos");
                });

            modelBuilder.Entity("Domain.Entities.Especie", b =>
                {
                    b.Navigation("Mascotas");

                    b.Navigation("Razas");
                });

            modelBuilder.Entity("Domain.Entities.Laboratorio", b =>
                {
                    b.Navigation("Medicamentos");
                });

            modelBuilder.Entity("Domain.Entities.Mascota", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("Domain.Entities.Medicamento", b =>
                {
                    b.Navigation("DetalleMovimientos");

                    b.Navigation("MedicamentoProveedores");

                    b.Navigation("MovimientoMedicamentos");

                    b.Navigation("TratamientosMedicos");
                });

            modelBuilder.Entity("Domain.Entities.MovimientoMedicamento", b =>
                {
                    b.Navigation("DetalleMovimientos");
                });

            modelBuilder.Entity("Domain.Entities.Propietario", b =>
                {
                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("Domain.Entities.Proveedor", b =>
                {
                    b.Navigation("MedicamentoProveedores");
                });

            modelBuilder.Entity("Domain.Entities.Raza", b =>
                {
                    b.Navigation("Mascotas");
                });

            modelBuilder.Entity("Domain.Entities.Rol", b =>
                {
                    b.Navigation("UserRols");
                });

            modelBuilder.Entity("Domain.Entities.TipoMovimiento", b =>
                {
                    b.Navigation("DetalleMovimientos");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("UserRols");
                });

            modelBuilder.Entity("Domain.Entities.Veterinario", b =>
                {
                    b.Navigation("Citas");
                });
#pragma warning restore 612, 618
        }
    }
}
